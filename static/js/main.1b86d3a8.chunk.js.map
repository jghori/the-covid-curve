{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Info","data","confirmed","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","variant","gutterBottom","start","end","value","duration","separator","color","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","fontSize","fontFamily","fontColor","lineChart","substring","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","header","image","src","coronaImage","alt","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b86d3a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nconst Info = ({ data }) => {\n  if (!data.confirmed) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={data.confirmed.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={data.recovered.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h4\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={data.deaths.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(data.lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date,\n    }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport { fetchDailyData } from \"../../api\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\"#5bc1ff\", \"#4fe6c1\", \"#ff775b\"],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current status of ${country}`,\n          fontSize: 17,\n          fontFamily: \"sans-serif\",\n          fontColor: \"#808080\",\n        },\n      }}\n    />\n  ) : null;\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(\n          ({ date }) =>\n            (date =\n              date.substring(5, 7) +\n              \"/\" +\n              date.substring(8, 10) +\n              \"/\" +\n              date.substring(0, 4))\n        ),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#5bc1ff\",\n            backgroundColor: \"rgba(91,193,255,0.1)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: \"Deaths\",\n            borderColor: \"#ff775b\",\n            backgroundColor: \"rgba(255,119,91, 0.8)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport styles from \"./CountryPicker.module.css\";\n\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\"> Global </option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\n\nimport { Cards, CountryPicker, Chart } from \"./components\";\nimport { fetchData } from \"./api/\";\nimport styles from \"./App.module.css\";\nimport coronaImage from \"./images/image.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div>\n        <div className={styles.header}>\n          <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        </div>\n        <div className={styles.container}>\n          <h2 className={styles.text}>Select Country:</h2>\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n          <Cards data={data} />\n          <Chart data={data} country={country} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"App_text__PPQbm\",\"header\":\"App_header__3ZZ1n\",\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.8b1012c8.png\";"],"sourceRoot":""}